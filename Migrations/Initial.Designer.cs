// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.context;

#nullable disable

namespace Model.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230627013544_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("AnimalZookeeper", b =>
                {
                    b.Property<int>("AnimalsAnimalId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ZookeepersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimalsAnimalId", "ZookeepersId");

                    b.HasIndex("ZookeepersId");

                    b.ToTable("AnimalZookeeper");
                });

            modelBuilder.Entity("Model.models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnimalName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CellId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MainMealId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AnimalId");

                    b.HasIndex("CellId");

                    b.HasIndex("MainMealId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Model.models.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Cell");
                });

            modelBuilder.Entity("Model.models.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Meal");
                });

            modelBuilder.Entity("Model.models.Zookeeper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Zookeeper");
                });

            modelBuilder.Entity("AnimalZookeeper", b =>
                {
                    b.HasOne("Model.models.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalsAnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.models.Zookeeper", null)
                        .WithMany()
                        .HasForeignKey("ZookeepersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.models.Animal", b =>
                {
                    b.HasOne("Model.models.Cell", "Cell")
                        .WithMany("Animals")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.models.Meal", "MainMeal")
                        .WithMany()
                        .HasForeignKey("MainMealId");

                    b.Navigation("Cell");

                    b.Navigation("MainMeal");
                });

            modelBuilder.Entity("Model.models.Cell", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
